AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Creates a VPC with two public and two private subnets across two Availability Zones,
  along with an Internet Gateway, two NAT Gateways, and the necessary route tables.

Parameters:
  VpcCidr:
    Type: String
    Default: 10.0.0.0/16
    Description: 'CIDR block for the VPC'
  VpcName:
    Type: String
    Default: MyCustomVPC
    Description: 'Name for the VPC'
  AvailabilityZone1:
    Type: AWS::EC2::AvailabilityZone::Name
    Description: 'First Availability Zone (e.g., us-east-1a)'
  AvailabilityZone2:
    Type: AWS::EC2::AvailabilityZone::Name
    Description: 'Second Availability Zone (e.g., us-east-1b)'
  PublicSubnet1Cidr:
    Type: String
    Default: 10.0.2.0/23
    Description: 'CIDR block for the first public subnet in AZ1'
  PublicSubnet2Cidr:
    Type: String
    Default: 10.0.4.0/23
    Description: 'CIDR block for the second public subnet in AZ2'
  PrivateSubnet1Cidr:
    Type: String
    Default: 10.0.6.0/23
    Description: 'CIDR block for the first private subnet in AZ1'
  PrivateSubnet2Cidr:
    Type: String
    Default: 10.0.8.0/23
    Description: 'CIDR block for the second private subnet in AZ2'

Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref VpcName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: myigw

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway
  # Public subnets creation
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: !Ref PublicSubnet1Cidr
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Ref AvailabilityZone1
      Tags:
        - Key: Name
          Value: pub-sub-1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: !Ref PublicSubnet2Cidr
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Ref AvailabilityZone2
      Tags:
        - Key: Name
          Value: pub-sub-2

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: !Ref PrivateSubnet1Cidr
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Ref AvailabilityZone1
      Tags:
        - Key: Name
          Value: pvt-sub-1

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: !Ref PrivateSubnet2Cidr
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Ref AvailabilityZone2
      Tags:
        - Key: Name
          Value: pvt-sub-2
  # Public route table creation and subnet and rt table association
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: pub-rt

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  # NAT Gateway in PublicSubnet1 (AZ1)
  NatGatewayEIP1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP1.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: mynat-1

  # NAT Gateway in PublicSubnet2 (AZ2)
  NatGatewayEIP2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP2.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: mynat-2

  # Private Route Table and Association for AZ2
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: pvt-rt-2

  PrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1

  # Private Route Table and Association for AZ2
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: pvt-rt-2

  PrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2

Outputs:
  VpcId:
    Description: 'VPC ID'
    Value: !Ref MyVPC
  PublicSubnet1Id:
    Description: 'Public Subnet in AZ1 ID'
    Value: !Ref PublicSubnet1
  PublicSubnet2Id:
    Description: 'Public Subnet in AZ2 ID'
    Value: !Ref PublicSubnet2
  PrivateSubnet1Id:
    Description: 'Private Subnet in AZ1 ID'
    Value: !Ref PrivateSubnet1
  PrivateSubnet2Id:
    Description: 'Private Subnet in AZ2 ID'
    Value: !Ref PrivateSubnet2
